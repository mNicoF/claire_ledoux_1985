{"version":3,"sources":["AppLayout/Body/AnnonceTMP/horaires.PNG","AppLayout/Header/Header.js","AppLayout/Body/AnnonceTMP/AnnonceTMP.js","AppLayout/Body/Body.js","AppLayout/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Component","AnnonceTMP","height","window","innerHeight","style","margin","target","rel","href","font-size","src","require","alt","Body","Body_AnnonceTMP_AnnonceTMP","Footer","index_es","icon","title","library","add","faCopyright","App","AppLayout_Header_Header","AppLayout_Body_Body","AppLayout_Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8LCezBC,0LAVX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,+BALWC,cC0BNC,0LArBX,IAAIC,EAAUC,OAAOC,YAAc,IAAO,KAE1C,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaM,MAAO,CAACH,OAAUA,IAC5CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,aACAH,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAACC,OAAU,SACrBV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaQ,OAAO,SAASC,IAAI,sBAAsBC,KAAK,8CAAzE,sBAEFb,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAACK,YAAa,QAA1B,6CAEFd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcY,IAAKC,EAAQ,IAAmBC,IAAI,sBAjBlDb,cCSVc,mLARX,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAD,cAJWf,qBCmBJgB,0LAbX,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,eADjC,mBAGAtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeoB,MAAM,2CAApC,yBAVanB,2CCiBrBoB,IAAQC,IAAIC,SAiBGC,mLAVX,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAD,cANU1B,aCfE2B,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8322a925.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/horaires.b9c6bf84.PNG\";","import React, { Component } from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <header className=\"App-header theme\">\n          <h1 className=\"App-title\">CLAIRE LEDOUX 1985</h1>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n//import { Button } from 'react-bootstrap';\n\nimport './AnnonceTMP.css';\n\nclass AnnonceTMP extends Component {\n  render() {\n\n    let height = (window.innerHeight - 230) + \"px\";\n\n    return (\n      <div className=\"AnnonceTMPLayout\">\n        <div className=\"AnnonceTMP\" style={{'height': height}}>\n          <div className=\"AnnonceH3\">Bienvenue</div>\n          <div>Le cabinet de dermographie est désormé ouvert !</div>\n          <div>Retrouverez toujours les informations sur Facebook :  </div>\n          <div style={{'margin': '20px'}}>\n            <a className=\"AnnonceBtn\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/claireledoux1985/\">@claireledoux1985</a>\n          </div>\n          <div style={{'font-size': '1em'}}>Ce site est en cours de développement</div>\n        </div>\n        <div className=\"HorairesIMGLayout\">\n          <img className=\"HorairesIMG\" src={require('./horaires.PNG')} alt=\"horaires\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AnnonceTMP;\n","import React, { Component } from 'react';\nimport AnnonceTMP from './AnnonceTMP/AnnonceTMP.js';\n//import Contact from './Contact/Contact.js';\n\nclass Body extends Component {\n  render() {\n    return (\n      <div>\n        <AnnonceTMP/>\n      </div>\n    );\n  }\n}\n\nexport default Body;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './Footer.css';\n\nclass Footer extends Component {\n\n  //<FontAwesomeIcon icon={{ prefix: 'far', iconName: 'copyright' }} spin /> Nicolas Forget\n  \n  render() {\n    return (\n      <div className=\"App-footer theme-reverse\">\n        <div className=\"Footer-left\">\n          <FontAwesomeIcon icon={['far', 'copyright']} /> Nicolas Forget\n        </div>\n        <div className=\"Footer-right\" title=\"Dernière mise à jour : 05/11/2018\">\n          Version 0.1.1\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\n/**\n * TODO : modify this\n */\nimport Header from './AppLayout/Header/Header';\nimport Body from './AppLayout/Body/Body';\nimport Footer from './AppLayout/Footer/Footer';\n\n/**\n * CSS\n */\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Style/App.css';\n\n/**\n * Library Font-Awesome\n */\n//import '@fortawesome/fontawesome-free'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCopyright } from '@fortawesome/free-regular-svg-icons';\n//import {  } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faCopyright);\n\n/**\n * App Component render\n */\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Body/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}